name: primary

on:
  push:
#    branches: [ main ]
    paths:
      - .github/workflows/primary.yaml
      - primary/**
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  Deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: primary
    env:
      ARM_USE_OIDC: "true"
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v5

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: 'Login to Azure'
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: 'Configure Git auth'
        run: git config --global url."https://${{ secrets.PAT_MONO_JVM_READ }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

#      - name: Who am I (service principal)
#        run: |
#          echo "ARM_CLIENT_ID=$ARM_CLIENT_ID"
#          echo "----- az account show -----"
#          az account show
#          echo "----- derive IDs -----"
#          # appId (clientId) of the signed-in SP:
#          SP_APPID=$(az account show --query 'user.name' -o tsv)
#          echo "SP_APPID=$SP_APPID"
#          # objectId in Entra ID:
#          SP_OBJID=$(az ad sp show --id "$SP_APPID" --query id -o tsv)
#          echo "SP_OBJID=$SP_OBJID"
#
#      - name: Check Storage RBAC for this SP
#        env:
#          RG: rg-mono-primary
#          SA: mono058f3201
#        run: |
#          SA_ID=$(az storage account show -g "$RG" -n "$SA" --query id -o tsv)
#          echo "SA_ID=$SA_ID"
#          SP_APPID=$(az account show --query 'user.name' -o tsv)
#          SP_OBJID=$(az ad sp show --id "$SP_APPID" --query id -o tsv)
#          echo "Listing role assignments at Storage Account scope:"
#          az role assignment list --assignee "$SP_OBJID" --scope "$SA_ID" --query "[].{role:roleDefinitionName,id:id}" -o table
#
#      - name: Try data-plane list (auth-mode=login)
#        env:
#          SA: mono058f3201
#        run: |
#          az storage container list --account-name "$SA" --auth-mode login -o table || true
#          az storage blob list --account-name "$SA" -c tfstate --auth-mode login -o table || true

      - name: 'Terraform Init'
        run: terraform init -input=false

      - name: 'Terraform Validate'
        run: terraform validate

      - name: 'Terraform Plan'
        run: terraform plan -out=tfplan

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve tfplan
