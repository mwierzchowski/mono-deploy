name: .deploy-aca

on:
  workflow_call:
    inputs:
      service:
        description: 'Service'
        type: string
        default: ${{ github.workflow }}
      image:
        description: 'Image'
        type: string
        required: true
      repository:
        description: 'Repository'
        type: string
        default: ${{ github.event.repository.name }}
      target_ref:
        description: 'Target branch for edit'
        type: string
        default: 'main'

jobs:
  ACA:
    runs-on: ubuntu-latest
    env:
      DEPLOY_REPO: mono-deploy
      DEPLOY_ENV: preview
      CONFIG_FILE: preview/apps-aca.yaml
    steps:
      - name: 'Sanity check inputs'
        run: |
          [ -n "${{ inputs.service }}" ] || { echo 'Service required'; exit 1; }
          [ -n "${{ inputs.image }}" ]   || { echo 'Image required'; exit 1; }

      - name: 'Checkout deploy repository'
        uses: actions/checkout@v5
        with:
          repository: ${{ github.repository_owner }}/${{ env.DEPLOY_REPO }}
          ref: ${{ inputs.target_ref }}
          token: ${{ secrets.MONO_DEPLOY_PUSH_TOKEN }}

      - name: 'Upsert configuration'
        uses: mikefarah/yq@v4
        with:
          cmd: |
            yq -i '
              .apps["${{ inputs.service }}"].repository = "${{ inputs.repository }}" |
              .apps["${{ inputs.service }}"].image = "${{ inputs.image }}"
            ' "${{ env.CONFIG_FILE }}"            

      - name: 'Show updated YAML'
        run: cat '${{ env.CONFIG_FILE }}'

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v3

      - name: 'Validate terraform'
        working-directory: ${{ env.DEPLOY_ENV }}
        run: |
          terraform init -backend=false -input=false -no-color
          terraform validate -no-color

      - name: 'Prepare short image name'
        id: short-image
        run: |
          img='${{ inputs.image }}'
          echo "value=${img#*/}" >> "$GITHUB_OUTPUT"

      - name: 'Commit changes'
        uses: EndBug/add-and-commit@v9
        with:
          add: ${{ env.CONFIG_FILE }}
          message: 'Deploy ${{ steps.short-image.outputs.value }}'

      - name: 'Show deployment link'
        run: echo "::notice ::https://github.com/${{ github.repository_owner }}/${{ env.DEPLOY_REPO }}/actions/workflows/${{ env.DEPLOY_ENV }}.yaml"
